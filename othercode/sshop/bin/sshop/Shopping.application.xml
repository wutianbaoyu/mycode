<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>Shop scenario application descriptor</H3>
	
	In this scenario a typical online shopping scenario
	is build up. Customer agents may search for shops
	and buy offered goods in that shops.
	
	The shop application demonstrates how active components (in this
	application specifically bdi agents) can be equipped with a domain
	interface. This allows an object oriented interaction with the
	component that exposes the domain interface. 
-->
<applicationtype xmlns="http://www.activecomponents.org/jadex-application"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-application 
	                    http://www.activecomponents.org/jadex-application-${jadex_build_version}.xsd"
	name="Shopping" package="sshop"
	autoshutdown="true">
	
	<componenttypes>
		<componenttype name="Shop" filename="sshop/ShopBDI.class"/>
		<componenttype name="Customer" filename="sshop/CustomerBDI.class"/>
		<componenttype name="ShopAndCustomer" filename="sshop/ShopAndCustomerBDI.class"/>
	</componenttypes>
	
	<configurations>
		<configuration name="2 Shops / 1 Customer">
			<components>
				<component type="Shop">
					<arguments>
						<argument name="shopname">"Ladl, "+$component.getComponentIdentifier().getPlatformName()</argument>
						<argument name="catalog">
							java.util.Arrays.asList(new ItemInfo[]
							{
								new ItemInfo("Cookies", 0.89, 10),
								new ItemInfo("Milk", 0.56, 2),
								new ItemInfo("Bread", 1.09, 8),
								new ItemInfo("Meat", 2.89, 6)
							})
						</argument>
					</arguments>
				</component>
				<component type="Shop">
					<arguments>
						<argument name="shopname">"Herzie, "+$component.getComponentIdentifier().getPlatformName()</argument>
						<argument name="catalog">
							java.util.Arrays.asList(new ItemInfo[]
							{
								new ItemInfo("Shoes", 55.99, 2),
								new ItemInfo("Shirt", 15.00, 10),
								new ItemInfo("Pants", 75.99, 15)
							})
						</argument>
					</arguments>
				</component>
  				<component type="Customer"/>
			</components>
 		</configuration>
	
		<configuration name="1 Shop / 1 Customer">
			<components>
				<component type="Shop">
					<arguments>
						<argument name="shopname">"Ladl, "+$component.getComponentIdentifier().getPlatformName()</argument>
						<argument name="catalog">
							java.util.Arrays.asList(new ItemInfo[]
							{
								new ItemInfo("Cookies", 0.89, 10),
								new ItemInfo("Milk", 0.56, 2),
								new ItemInfo("Bread", 1.09, 8),
								new ItemInfo("Meat", 2.89, 6)
							})
						</argument>
					</arguments>
				</component>
  				<component type="Customer"/>
			</components>
 		</configuration>
 		
 		<configuration name="2 Shops that are also Customers">
			<components>
				<component type="ShopAndCustomer" name="Ladl">
					<arguments>
						<argument name="shopname">"Ladl, "+$component.getComponentIdentifier().getPlatformName()</argument>
						<argument name="catalog">
							java.util.Arrays.asList(new ItemInfo[]
							{
								new ItemInfo("Cookies", 0.89, 10),
								new ItemInfo("Milk", 0.56, 2),
								new ItemInfo("Bread", 1.09, 8),
								new ItemInfo("Meat", 2.89, 6)
							})
						</argument>
					</arguments>
				</component>
				<component type="ShopAndCustomer" name="Herzie">
					<arguments>
						<argument name="shopname">"Herzie, "+$component.getComponentIdentifier().getPlatformName()</argument>
						<argument name="catalog">
							java.util.Arrays.asList(new ItemInfo[]
							{
								new ItemInfo("Shoes", 55.99, 2),
								new ItemInfo("Shirt", 15.00, 10),
								new ItemInfo("Pants", 75.99, 15)
							})
						</argument>
					</arguments>
				</component>
			</components>
 		</configuration>
	</configurations>

</applicationtype>
